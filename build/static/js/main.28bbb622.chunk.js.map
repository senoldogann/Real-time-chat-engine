{"version":3,"sources":["components/LoginForm.jsx","components/MessageForm.jsx","components/MyMessage.jsx","components/TheirMessage.jsx","components/ChatFeed.jsx","App.js","index.js"],"names":["LoginForm","useState","username","setUsername","password","setPassword","error","setError","handleSubmit","e","a","preventDefault","authObject","axios","get","headers","localStorage","setItem","window","location","reload","className","onSubmit","type","value","onChange","target","placeholder","required","align","MessageForm","props","setValue","chatId","creds","event","text","trim","length","sendMessage","isTyping","htmlFor","PictureOutlined","multiple","id","style","display","files","SendOutlined","MyMessage","message","attachments","src","file","alt","float","marginRight","color","backgroundColor","TheirMessage","lastMessage","isFirstMessageByUser","sender","backgroundImage","avatar","marginLeft","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","title","borderRadius","width","height","onClick","clear","keys","Object","key","lastMessageKey","renderMessages","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.28bbb622.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst LoginForm = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error,setError] = useState('');\r\n  \r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n \r\n        const authObject = { 'Project-ID': \"849c3757-bfa1-4992-b694-7230f2f1ae00\", \"User-Name\": username, 'User-Secret': password };\r\n\r\n        try {\r\n            \r\n            // username | password => chatengine =>> give messages\r\n            await axios.get(`https://api.chatengine.io/chats`, { headers: authObject });\r\n\r\n            // works out => logged in\r\n            localStorage.setItem('username',username);\r\n            localStorage.setItem('password',password);\r\n\r\n            window.location.reload();\r\n        } catch (error) {\r\n               // error => try with new username..\r\n               setError('Oops, incorrect credentials.')\r\n        }\r\n\r\n       \r\n \r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className=\"form\">\r\n                <h1 className=\"title\">Chat Application</h1>\r\n                <form onSubmit={handleSubmit}>\r\n                    <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} className=\"input\" placeholder=\"Username\" required />\r\n                    <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"input\" placeholder=\"Password\" required />\r\n                    <div align=\"center\">\r\n                        <button type=\"submit\" className=\"button\">\r\n                            <span>Start Chatting</span>\r\n                        </button>\r\n                    </div>\r\n                    <h2 className=\"error\">{error}</h2>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginForm;","import { useState } from 'react';\r\nimport { sendMessage, isTyping } from 'react-chat-engine';\r\nimport { SendOutlined, PictureOutlined } from '@ant-design/icons';\r\nconst MessageForm = (props) => {\r\n\r\n    const [value, setValue] = useState('');\r\n    const { chatId, creds } = props;\r\n\r\n    const handleSubmit = (event) => {\r\n\r\n        event.preventDefault();\r\n        const text = value.trim();\r\n\r\n        if (text.length > 0) sendMessage(creds, chatId, { text });\r\n        setValue('');\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n        isTyping(props, chatId);\r\n    }\r\n\r\n    const handleUpload = (event) => {\r\n        sendMessage(creds, chatId, { files: event.target.files, text: '' })\r\n    }\r\n\r\n    return (\r\n        <form className=\"message-form\" onSubmit={handleSubmit}>\r\n            <input className=\"message-input\" placeholder=\"Send a message...\" value={value} onChange={handleChange} onSubmit={handleSubmit} />\r\n            <label htmlFor=\"upload-button\">\r\n                <span className=\"image-button\">\r\n                    <PictureOutlined className=\"picture-icon\" />\r\n                </span>\r\n            </label>\r\n            <input type=\"file\" multiple={false} id=\"upload-button\" style={{ display: 'none' }} onChange={handleUpload} />\r\n            <button className=\"send-button\" type=\"submit\">\r\n                <SendOutlined className=\"send-icon\" />\r\n                \r\n            </button>\r\n           \r\n        </form>\r\n      \r\n    )\r\n}\r\n\r\nexport default MessageForm;","const MyMessage = ({ message }) => {\r\n    if (message?.attachments?.length > 0) {\r\n        return (\r\n            <img src={message.attachments[0].file} alt=\"message-attachment\" className=\"message-image\" style={{ float: 'right' }} />\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"message\" style={{float:'right', marginRight:'18px',color:'white',backgroundColor:'#3B2A50'}}>\r\n            {message.text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyMessage;","const TheirMessage = ({ lastMessage, message }) => {\r\n    const isFirstMessageByUser = !lastMessage || lastMessage.sender.username !== message.sender.username;\r\n    return (\r\n        <div className=\"message-row\">\r\n            {isFirstMessageByUser && (\r\n                <div\r\n                    className=\"message-avatar\"\r\n                    style={{ backgroundImage: `url(${message?.sender?.avatar})` }}\r\n                />\r\n            )}\r\n            {\r\n                message?.attachments?.length > 0\r\n                    ? (\r\n                        <img src={message.attachments[0].file} alt=\"message-attachment\" className=\"message-image\" style={{ marginLeft: isFirstMessageByUser ? '4px' : '48px' }} />\r\n                    ) : (\r\n                        <div className=\"message\" style={{ float: 'left', backgroundColor: '#CABCDC', marginLeft: isFirstMessageByUser ? '4px' : '48px'}}>\r\n                            {message.text}\r\n                        </div>\r\n                    )\r\n\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TheirMessage;","import MessageForm from './MessageForm';\r\nimport MyMessage from './MyMessage';\r\nimport TheirMessage from './TheirMessage';\r\n \r\nconst ChatFeed = (props) => {\r\n    const { chats, activeChat, userName, messages } = props;\r\n\r\n    const chat = chats && chats[activeChat];\r\n\r\n    // Eğer kullanıcı mesajı görürse altta kutucukla gördüğünü gösterme \r\n    const renderReadReceipts = (message,isMyMessage) => {\r\n        return chat.people.map((person,index) => person.last_read === message.id && (\r\n            <div\r\n            key = {`read_${index}`}\r\n            className=\"read-receipt\"\r\n            style={{\r\n                float:isMyMessage ? 'right' : \"left\",\r\n                backgroundImage: `url(${person?.person?.avatar})` \r\n            }}\r\n            />\r\n        ))\r\n    }\r\n\r\n   \r\n    const renderMessages = () => {\r\n        const keys = Object.keys(messages);\r\n\r\n        return keys.map((key, index) => {\r\n            const message = messages[key];\r\n            const lastMessageKey = index === 0 ? null : keys[index - 1]\r\n            const isMyMessage = userName === message.sender.username;\r\n\r\n            return (\r\n                <div key={`msg_${index}`} style={{ width: '100%' }}>\r\n                    <div className=\"message-block\">\r\n                        {\r\n                            isMyMessage\r\n                                ? <MyMessage message={message} />\r\n                                : <TheirMessage message={message} lastMessage={messages[lastMessageKey]} />\r\n                        }\r\n                    </div>\r\n                    <div className=\"read-receipts\" style={{ marginRight: isMyMessage ? '18px' : '0px', marginLeft: isMyMessage ? '0px' : '68px' }}>\r\n                        {renderReadReceipts(message,isMyMessage)}\r\n                    </div>\r\n                </div>\r\n            );\r\n        })\r\n\r\n    }\r\n\r\n    const localstoreDelete = ()  => {window.localStorage.clear(); window.location.reload();}\r\n    \r\n\r\n    if (!chat) return 'Loading....';\r\n    return (\r\n        <div className=\"chat-feed\">\r\n            <div className=\"chat-title-container\">\r\n                <div className=\"chat-title\">{chat.title}</div>\r\n                <div className=\"chat-subtitle\">\r\n                    {chat.people.map((person) => ` ${person.person.username}`)}\r\n                    <hr />\r\n                    <button style={{backgroundColor:\"#2c3e50\",color:\"white\",borderRadius:\"10px\",width:\"80px\",height:\"25px\"}} onClick={localstoreDelete}>LogOut</button>\r\n                </div>\r\n            </div>\r\n            {renderMessages()}\r\n            <div style={{ height: '100px' }} />\r\n            <div className=\"message-form-container\">\r\n                <MessageForm  {... props} chatId={activeChat} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatFeed;\r\n","import { ChatEngine } from 'react-chat-engine';\r\n\r\nimport LoginForm from './components/LoginForm'\r\n\r\nimport ChatFeed from './components/ChatFeed';\r\n\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n    if(!localStorage.getItem('username')) return <LoginForm/>\r\n\r\n    return (\r\n        <ChatEngine\r\n            height=\"100vh\"\r\n            projectID = \"\" // Project-ID: enter here 'string' example:\"\"849c3757-bfa1-4992\" like this \r\n            userName = {localStorage.getItem('username')}\r\n            userSecret =  {localStorage.getItem('password')}\r\n            renderChatFeed={(chatAppProps) => <ChatFeed {...chatAppProps}/>}\r\n        />\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nReactDOM.render(<App/>,document.getElementById('root'));"],"sourceRoot":""}